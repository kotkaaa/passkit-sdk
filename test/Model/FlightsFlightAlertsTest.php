<?php
/**
 * FlightsFlightAlertsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Flights API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.33
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * FlightsFlightAlertsTest Class Doc Comment
 *
 * @category    Class
 * @description Flight alerts automatically update boarding passes as information becomes available or changes. Note that these services may incur additional usage charges.   - NO_ALERTS: Boarding passes will not automatically update.  - ALL_ALERTS: Boarding passes will automatically update whenever a change to the departure gate/time, arrival gate/time or baggage belt information is detected.  - DEPARTURE_GATE_ALERT: Boarding passes will automatically update whenever a change to the departure gate is detected.  - DEPARTURE_TIME_ALERT: Boarding passes will automatically update whenever a change to the estimated departure gate is detected.  - ARRIVAL_GATE_ALERT: Boarding passes will automatically update whenever a change to the arrival gate is detected.  - ARRIVAL_TIME_ALERT: Boarding passes will automatically update whenever a change to the estimated arrival time is detected.  - BAGGAGE_BELT_ALERT: Boarding passes will automatically update whenever the baggage collection belt or area is known or changes.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FlightsFlightAlertsTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "FlightsFlightAlerts"
     */
    public function testFlightsFlightAlerts()
    {
    }
}
