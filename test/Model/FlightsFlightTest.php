<?php
/**
 * FlightsFlightTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Flights API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.33
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * FlightsFlightTest Class Doc Comment
 *
 * @category    Class
 * @description A flight record describes data that is relevant to a single flight on a given date.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FlightsFlightTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "FlightsFlight"
     */
    public function testFlightsFlight()
    {
    }

    /**
     * Test attribute "carrier_code"
     */
    public function testPropertyCarrierCode()
    {
    }

    /**
     * Test attribute "flight_number"
     */
    public function testPropertyFlightNumber()
    {
    }

    /**
     * Test attribute "boarding_point"
     */
    public function testPropertyBoardingPoint()
    {
    }

    /**
     * Test attribute "deplaning_point"
     */
    public function testPropertyDeplaningPoint()
    {
    }

    /**
     * Test attribute "departure_date"
     */
    public function testPropertyDepartureDate()
    {
    }

    /**
     * Test attribute "departure_terminal"
     */
    public function testPropertyDepartureTerminal()
    {
    }

    /**
     * Test attribute "arrival_terminal"
     */
    public function testPropertyArrivalTerminal()
    {
    }

    /**
     * Test attribute "departure_gate"
     */
    public function testPropertyDepartureGate()
    {
    }

    /**
     * Test attribute "arrival_gate"
     */
    public function testPropertyArrivalGate()
    {
    }

    /**
     * Test attribute "scheduled_departure_time"
     */
    public function testPropertyScheduledDepartureTime()
    {
    }

    /**
     * Test attribute "estimated_departure_time"
     */
    public function testPropertyEstimatedDepartureTime()
    {
    }

    /**
     * Test attribute "boarding_time"
     */
    public function testPropertyBoardingTime()
    {
    }

    /**
     * Test attribute "gate_closing_time"
     */
    public function testPropertyGateClosingTime()
    {
    }

    /**
     * Test attribute "scheduled_arrival_time"
     */
    public function testPropertyScheduledArrivalTime()
    {
    }

    /**
     * Test attribute "estimated_arrival_time"
     */
    public function testPropertyEstimatedArrivalTime()
    {
    }

    /**
     * Test attribute "operating_carrier_code"
     */
    public function testPropertyOperatingCarrierCode()
    {
    }

    /**
     * Test attribute "operating_flight_number"
     */
    public function testPropertyOperatingFlightNumber()
    {
    }

    /**
     * Test attribute "code_share_flight_numbers"
     */
    public function testPropertyCodeShareFlightNumbers()
    {
    }

    /**
     * Test attribute "pass_template_id"
     */
    public function testPropertyPassTemplateId()
    {
    }

    /**
     * Test attribute "baggage_belt"
     */
    public function testPropertyBaggageBelt()
    {
    }

    /**
     * Test attribute "auto_invalidate_after"
     */
    public function testPropertyAutoInvalidateAfter()
    {
    }

    /**
     * Test attribute "auto_invalidate_cancelled_passes"
     */
    public function testPropertyAutoInvalidateCancelledPasses()
    {
    }

    /**
     * Test attribute "location_messages"
     */
    public function testPropertyLocationMessages()
    {
    }

    /**
     * Test attribute "beacon_messages"
     */
    public function testPropertyBeaconMessages()
    {
    }

    /**
     * Test attribute "links"
     */
    public function testPropertyLinks()
    {
    }

    /**
     * Test attribute "suspend_automatic_updates"
     */
    public function testPropertySuspendAutomaticUpdates()
    {
    }

    /**
     * Test attribute "boarding_policy"
     */
    public function testPropertyBoardingPolicy()
    {
    }

    /**
     * Test attribute "seating_policy"
     */
    public function testPropertySeatingPolicy()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "conditional_items"
     */
    public function testPropertyConditionalItems()
    {
    }

    /**
     * Test attribute "barcode_additional_data"
     */
    public function testPropertyBarcodeAdditionalData()
    {
    }

    /**
     * Test attribute "metrics"
     */
    public function testPropertyMetrics()
    {
    }

    /**
     * Test attribute "create_method"
     */
    public function testPropertyCreateMethod()
    {
    }

    /**
     * Test attribute "designator_id"
     */
    public function testPropertyDesignatorId()
    {
    }

    /**
     * Test attribute "invalidate_cancelled_passes"
     */
    public function testPropertyInvalidateCancelledPasses()
    {
    }
}
