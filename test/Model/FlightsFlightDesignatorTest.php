<?php
/**
 * FlightsFlightDesignatorTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Flights API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.33
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * FlightsFlightDesignatorTest Class Doc Comment
 *
 * @category    Class
 * @description A flight designator record describes mostly static data with regard to a flight operation.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FlightsFlightDesignatorTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "FlightsFlightDesignator"
     */
    public function testFlightsFlightDesignator()
    {
    }

    /**
     * Test attribute "carrier_code"
     */
    public function testPropertyCarrierCode()
    {
    }

    /**
     * Test attribute "flight_number"
     */
    public function testPropertyFlightNumber()
    {
    }

    /**
     * Test attribute "valid_from"
     */
    public function testPropertyValidFrom()
    {
    }

    /**
     * Test attribute "revision"
     */
    public function testPropertyRevision()
    {
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
    }

    /**
     * Test attribute "schedule"
     */
    public function testPropertySchedule()
    {
    }

    /**
     * Test attribute "operating_carrier_code"
     */
    public function testPropertyOperatingCarrierCode()
    {
    }

    /**
     * Test attribute "operating_flight_number"
     */
    public function testPropertyOperatingFlightNumber()
    {
    }

    /**
     * Test attribute "code_share_flight_numbers"
     */
    public function testPropertyCodeShareFlightNumbers()
    {
    }

    /**
     * Test attribute "origin"
     */
    public function testPropertyOrigin()
    {
    }

    /**
     * Test attribute "destination"
     */
    public function testPropertyDestination()
    {
    }

    /**
     * Test attribute "transit_points"
     */
    public function testPropertyTransitPoints()
    {
    }

    /**
     * Test attribute "departure_terminal"
     */
    public function testPropertyDepartureTerminal()
    {
    }

    /**
     * Test attribute "arrival_terminal"
     */
    public function testPropertyArrivalTerminal()
    {
    }

    /**
     * Test attribute "transit_terminals"
     */
    public function testPropertyTransitTerminals()
    {
    }

    /**
     * Test attribute "boarding_policy"
     */
    public function testPropertyBoardingPolicy()
    {
    }

    /**
     * Test attribute "seat_class_policy"
     */
    public function testPropertySeatClassPolicy()
    {
    }

    /**
     * Test attribute "alerts"
     */
    public function testPropertyAlerts()
    {
    }

    /**
     * Test attribute "pass_template_id"
     */
    public function testPropertyPassTemplateId()
    {
    }

    /**
     * Test attribute "auto_invalidate_after"
     */
    public function testPropertyAutoInvalidateAfter()
    {
    }

    /**
     * Test attribute "auto_invalidate_cancelled_passes"
     */
    public function testPropertyAutoInvalidateCancelledPasses()
    {
    }

    /**
     * Test attribute "location_messages"
     */
    public function testPropertyLocationMessages()
    {
    }

    /**
     * Test attribute "beacon_messages"
     */
    public function testPropertyBeaconMessages()
    {
    }

    /**
     * Test attribute "default_links"
     */
    public function testPropertyDefaultLinks()
    {
    }

    /**
     * Test attribute "conditional_items"
     */
    public function testPropertyConditionalItems()
    {
    }

    /**
     * Test attribute "barcode_additional_data"
     */
    public function testPropertyBarcodeAdditionalData()
    {
    }

    /**
     * Test attribute "invalidate_cancelled_passes"
     */
    public function testPropertyInvalidateCancelledPasses()
    {
    }
}
