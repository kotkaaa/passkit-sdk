<?php
/**
 * FlightsBoardingPassRecordTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Flights API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.33
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * FlightsBoardingPassRecordTest Class Doc Comment
 *
 * @category    Class
 * @description A Boarding Pass record is unique to an individual passenger journey form a boarding point to a deplaning point. A Carrier and a Flight Designation record must exist. If a Flight record does not already exist, then it will be auto-generated based on the Flight Designation record (and other publicly available data if subscribed to data updates).
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FlightsBoardingPassRecordTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "FlightsBoardingPassRecord"
     */
    public function testFlightsBoardingPassRecord()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "operating_carrier_pnr"
     */
    public function testPropertyOperatingCarrierPnr()
    {
    }

    /**
     * Test attribute "related_pn_rs"
     */
    public function testPropertyRelatedPnRs()
    {
    }

    /**
     * Test attribute "ticket_number"
     */
    public function testPropertyTicketNumber()
    {
    }

    /**
     * Test attribute "ticket_leg"
     */
    public function testPropertyTicketLeg()
    {
    }

    /**
     * Test attribute "boarding_point"
     */
    public function testPropertyBoardingPoint()
    {
    }

    /**
     * Test attribute "deplaning_point"
     */
    public function testPropertyDeplaningPoint()
    {
    }

    /**
     * Test attribute "carrier_code"
     */
    public function testPropertyCarrierCode()
    {
    }

    /**
     * Test attribute "flight_number"
     */
    public function testPropertyFlightNumber()
    {
    }

    /**
     * Test attribute "departure_date"
     */
    public function testPropertyDepartureDate()
    {
    }

    /**
     * Test attribute "passenger"
     */
    public function testPropertyPassenger()
    {
    }

    /**
     * Test attribute "class"
     */
    public function testPropertyClass()
    {
    }

    /**
     * Test attribute "compartment_code"
     */
    public function testPropertyCompartmentCode()
    {
    }

    /**
     * Test attribute "seat_number"
     */
    public function testPropertySeatNumber()
    {
    }

    /**
     * Test attribute "sequence_number"
     */
    public function testPropertySequenceNumber()
    {
    }

    /**
     * Test attribute "boarding_group"
     */
    public function testPropertyBoardingGroup()
    {
    }

    /**
     * Test attribute "boarding_position"
     */
    public function testPropertyBoardingPosition()
    {
    }

    /**
     * Test attribute "free_baggage_allowance"
     */
    public function testPropertyFreeBaggageAllowance()
    {
    }

    /**
     * Test attribute "carry_on_allowance"
     */
    public function testPropertyCarryOnAllowance()
    {
    }

    /**
     * Test attribute "ssr_codes"
     */
    public function testPropertySsrCodes()
    {
    }

    /**
     * Test attribute "osi"
     */
    public function testPropertyOsi()
    {
    }

    /**
     * Test attribute "remarks"
     */
    public function testPropertyRemarks()
    {
    }

    /**
     * Test attribute "passenger_status"
     */
    public function testPropertyPassengerStatus()
    {
    }

    /**
     * Test attribute "conditional_items"
     */
    public function testPropertyConditionalItems()
    {
    }

    /**
     * Test attribute "barcode_payload"
     */
    public function testPropertyBarcodePayload()
    {
    }

    /**
     * Test attribute "security_image"
     */
    public function testPropertySecurityImage()
    {
    }

    /**
     * Test attribute "privilege_image"
     */
    public function testPropertyPrivilegeImage()
    {
    }

    /**
     * Test attribute "footer_image"
     */
    public function testPropertyFooterImage()
    {
    }

    /**
     * Test attribute "location_messages"
     */
    public function testPropertyLocationMessages()
    {
    }

    /**
     * Test attribute "beacon_messages"
     */
    public function testPropertyBeaconMessages()
    {
    }

    /**
     * Test attribute "links"
     */
    public function testPropertyLinks()
    {
    }

    /**
     * Test attribute "barcode_additional_data"
     */
    public function testPropertyBarcodeAdditionalData()
    {
    }

    /**
     * Test attribute "infant_pass_id"
     */
    public function testPropertyInfantPassId()
    {
    }

    /**
     * Test attribute "additional_data_items"
     */
    public function testPropertyAdditionalDataItems()
    {
    }

    /**
     * Test attribute "metadata"
     */
    public function testPropertyMetadata()
    {
    }
}
