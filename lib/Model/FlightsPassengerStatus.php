<?php
/**
 * FlightsPassengerStatus
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Flights API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.33
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;
use \Swagger\Client\ObjectSerializer;

/**
 * FlightsPassengerStatus Class Doc Comment
 *
 * @category Class
 * @description Passenger Status as detailed in IATA PSC Resolution 792 Attachment &#x27;C&#x27;. Note: all values other than 0 indicate that the passenger has checked in.   - ISSUED_NOT_CHECKED_IN: Ticket issuance/passenger not checked in  - ISSUED_CHECKED_IN: Ticket issuance/passenger checked in  - BAGGAGE_CHECKED_PASSENGER_NOT_CHECKED_IN: Baggage checked - passenger not checked in  - BAGGAGE_CHECKED_PASSENGER_CHECKED_IN: Baggage checked - passenger checked in  - PASSENGER_PASSED_SECURITY_CHECK: Passenger passed security check  - PASSENGER_PASSED_GATE: Passenger passed gate and exit (coupon used)  - TRANSIT: Transit  - STANDBY: Standby. Seat number not printed on boarding pass at time of check in  - BOARDING_DATA_REVALIDATION_DONE: Boarding data re-validation done  - ORIGINAL_BOARDING_LINE_USED_AT_TICKET_ISSUANCE: Original boarding line used at time of ticket issuance  - UP_OR_DOWN_GRADING_REQUIRED: Up or down grading required
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FlightsPassengerStatus
{
    /**
     * Possible values of this enum
     */
    const ISSUED_NOT_CHECKED_IN = 'ISSUED_NOT_CHECKED_IN';
const ISSUED_CHECKED_IN = 'ISSUED_CHECKED_IN';
const BAGGAGE_CHECKED_PASSENGER_NOT_CHECKED_IN = 'BAGGAGE_CHECKED_PASSENGER_NOT_CHECKED_IN';
const BAGGAGE_CHECKED_PASSENGER_CHECKED_IN = 'BAGGAGE_CHECKED_PASSENGER_CHECKED_IN';
const PASSENGER_PASSED_SECURITY_CHECK = 'PASSENGER_PASSED_SECURITY_CHECK';
const PASSENGER_PASSED_GATE = 'PASSENGER_PASSED_GATE';
const TRANSIT = 'TRANSIT';
const STANDBY = 'STANDBY';
const BOARDING_DATA_REVALIDATION_DONE = 'BOARDING_DATA_REVALIDATION_DONE';
const ORIGINAL_BOARDING_LINE_USED_AT_TICKET_ISSUANCE = 'ORIGINAL_BOARDING_LINE_USED_AT_TICKET_ISSUANCE';
const UP_OR_DOWN_GRADING_REQUIRED = 'UP_OR_DOWN_GRADING_REQUIRED';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ISSUED_NOT_CHECKED_IN,
self::ISSUED_CHECKED_IN,
self::BAGGAGE_CHECKED_PASSENGER_NOT_CHECKED_IN,
self::BAGGAGE_CHECKED_PASSENGER_CHECKED_IN,
self::PASSENGER_PASSED_SECURITY_CHECK,
self::PASSENGER_PASSED_GATE,
self::TRANSIT,
self::STANDBY,
self::BOARDING_DATA_REVALIDATION_DONE,
self::ORIGINAL_BOARDING_LINE_USED_AT_TICKET_ISSUANCE,
self::UP_OR_DOWN_GRADING_REQUIRED,        ];
    }
}
